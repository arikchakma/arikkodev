---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import '../../styles/article.css';
import { formatDate, getRelativeTime } from '../../lib/time';
import { getTableOfContents } from '../../lib/article';

export async function getStaticPaths() {
  const blogEntries = await getCollection('writing');
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<'writing'>;
};

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
const { title, publishedAt, description, author, tags, image } = entry.data;
const date = formatDate(publishedAt!);
const timeAgo = getRelativeTime(publishedAt!);
const toc = getTableOfContents(headings);
---

<Layout
  activePage='writing'
  title={`${title} | Arik Chakma`}
  description={description}
  keywords={tags}
  permalink={`/writing/${entry.slug}`}
  ogImageUrl={image?.src}
>
  <article
    class="container prose mt-10 max-sm:prose-h2:text-xl max-sm:prose-h2:[font-variation-settings:'wght'_600] max-sm:prose-h3:text-lg max-sm:prose-h3:[font-variation-settings:'wght'_600] max-sm:prose-h4:text-lg max-sm:prose-h4:[font-variation-settings:'wght'_600] max-sm:prose-p:text-sm max-sm:prose-ol:text-sm"
  >
    <div>
      <h1
        class="mb-0 text-3xl tracking-[-0.02em] [font-variation-settings:'wght'_700] sm:text-4xl"
      >
        {title}
      </h1>
      <p
        class='mb-10 mt-2 flex items-center gap-1.5 font-mono text-sm text-gray-500'
      >
        <a
          href={`https://twitter.com/${author?.twitter}`}
          target='_blank'
          class='not-prose text-gray-500 no-underline hover:text-black'
        >
          {author?.name}
        </a>
        &middot; {date}
        <span class='hidden sm:inline'>({timeAgo})</span>
      </p>
    </div>

    <div class='mb-10'>
      <h4 class='mt-0'>Table of Contents</h4>
      <ol class='list-inside pl-0'>
        {
          toc.map((heading, counter) => (
            <li>
              <a href={`#${heading.slug}`} class='no-underline'>
                {heading.text}
              </a>

              {heading.child.length > 0 && (
                <ol class='my-0 ml-6'>
                  {heading.child.map((children, childCounter) => {
                    return (
                      <li
                        style={{
                          '--counter': `'${counter + 1}.${childCounter + 1}.'`,
                        }}
                        class='marker:content-[var(--counter)]'
                      >
                        <a href={`#${children.slug}`} class='no-underline'>
                          {children.text}
                        </a>
                      </li>
                    );
                  })}
                </ol>
              )}
            </li>
          ))
        }
      </ol>
    </div>

    <Content class:list={['mt-5']} />
  </article>
</Layout>
