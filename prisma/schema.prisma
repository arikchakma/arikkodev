generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String  @map("user_id")
  type                     String
  provider                 String
  providerAccountId        String  @map("provider_account_id")
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  oauth_token              String? @db.Text
  oauth_token_secret       String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?    @map("refresh_token_expires_in")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  name          String?
  image         String?
  Account       Account[]
  Session       Session[]

  @@map("users")
}

model Guestbook {
  id         String   @id @default(cuid())
  email      String   @db.VarChar(256)
  body       String   @db.VarChar(500)
  created_by String   @db.VarChar(256)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("guestbook")
}
